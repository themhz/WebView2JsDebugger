{"version":3,"file":"remediation-tool-free.js","sources":["../../../assets/remediation/src/common/api/remediation-consolidated.ts","../../../assets/remediation/src/common/config/constants.ts","../../../assets/remediation/src/common/config/config.ts","../../../assets/remediation/src/constants/excluded-elements.ts","../../../assets/remediation/src/utils/get-all-elements/get-all-elements.ts","../../../node_modules/lodash-es/_freeGlobal.js","../../../node_modules/lodash-es/_root.js","../../../node_modules/lodash-es/_Symbol.js","../../../node_modules/lodash-es/_getRawTag.js","../../../node_modules/lodash-es/_objectToString.js","../../../node_modules/lodash-es/_baseGetTag.js","../../../node_modules/lodash-es/isObjectLike.js","../../../node_modules/lodash-es/isSymbol.js","../../../node_modules/lodash-es/_trimmedEndIndex.js","../../../node_modules/lodash-es/_baseTrim.js","../../../node_modules/lodash-es/isObject.js","../../../node_modules/lodash-es/toNumber.js","../../../node_modules/lodash-es/now.js","../../../node_modules/lodash-es/debounce.js","../../../node_modules/lodash-es/throttle.js","../../../assets/remediation/src/constants/timers.ts","../../../assets/remediation/src/common/performance-control/use-deferred-runner.ts","../../../assets/remediation/src/constants/base-api.ts","../../../assets/remediation/src/common/api/on-post-message.ts","../../../assets/remediation/src/common/remediation-manager/remediation-manager.ts","../../../assets/remediation/src/common/dom-observers/mutation-filters/prefilter.ts","../../../assets/remediation/src/common/dom-observers/main-observer.ts","../../../assets/remediation/src/index.ts","../../../assets/remediation/src/common/rules/rule-factory/create-remediation-rule.ts","../../../packages/uw-utils/src/normalize-src.ts","../../../packages/uw-utils/src/strip-url-parameters.ts","../../../assets/remediation/src/common/rules/image-alt/constants.ts","../../../assets/remediation/src/common/rules/image-alt/is-target-element.ts","../../../assets/remediation/src/common/rules/image-alt/utils/image-utils.ts","../../../assets/remediation/src/common/rules/image-alt/utils/is-existing-alt-invalid.ts","../../../assets/remediation/src/common/rules/image-alt/apply-corrections.ts","../../../assets/remediation/src/common/rules/image-alt/utils/is-excluded-domain-image.ts","../../../assets/remediation/src/common/rules/image-alt/utils/has-wrong-src.ts","../../../assets/remediation/src/common/rules/image-alt/utils/has-wrong-aspect-ratio.ts","../../../assets/remediation/src/common/rules/image-alt/utils/should-be-decorative.ts","../../../assets/remediation/src/common/remediation-result/remediation-result.ts","../../../assets/remediation/src/common/rules/image-alt/utils/process-images.ts","../../../assets/remediation/src/common/rules/image-alt/post-message-api.ts","../../../assets/remediation/src/common/api/missing-alt.ts","../../../assets/remediation/src/common/rules/image-alt/types.ts","../../../assets/remediation/src/common/rules/image-alt/utils/prepare-missing-alt-data.ts","../../../assets/remediation/src/common/rules/image-alt/rule.ts","../../../assets/remediation/src/common/rules-list/rules-list-free.ts","../../../assets/remediation/src/common/rules/image-alt/create-rule.ts"],"sourcesContent":["import { RemediationConfiguration } from '../../types/remediations-config';\n\nexport const getRemediationSettings = async (\n  jsonUrl: string,\n): Promise<RemediationConfiguration> => {\n  const response = await fetch(jsonUrl);\n  const json = await response.json();\n  return json;\n};\n","export const InitialRemediationConfig = {\n  AriaEditorValues: [],\n  BrokenLink: [],\n  Contrast: [],\n  EmptyControls: [],\n  ExternalLink: [],\n  Forms: [],\n  Headings: [],\n  Language: [],\n  MissingAlts: [],\n  Pdfs: [],\n  VagueLinks: [],\n};\n","import { getRemediationSettings } from '../api/remediation-consolidated';\nimport type { RemediationConfiguration } from '../../types/remediations-config';\nimport { InitialRemediationConfig } from './constants';\n\nexport const RemediationConfig =\n  UserWayWidgetApp.ContextHolder.config.remediation;\nexport const TuningsConfig = UserWayWidgetApp.ContextHolder.config.tunings;\nexport const ServicesConfig = UserWayWidgetApp.ContextHolder.config.services;\nexport const ImageAltConfig = UserWayWidgetApp.ContextHolder.config.imageAlt;\n\nlet RulesConfig: RemediationConfiguration = {} as RemediationConfiguration;\n\nexport function setRulesConfig(data: RemediationConfiguration): void {\n  RulesConfig = { ...data };\n}\n\nexport function getRulesConfig(): RemediationConfiguration {\n  return RulesConfig;\n}\n\nexport const initConfig = async (): Promise<void> => {\n  if (RemediationConfig?.consolidated) {\n    const config = await getRemediationSettings(RemediationConfig.consolidated);\n    // BE saves new updates as new element, so more relevant data will be the last => need reverse before find correction\n    config.MissingAlts.reverse();\n    setRulesConfig(config);\n    return;\n  }\n\n  // in case we do not have consolidated json link from BE, use empty config\n  setRulesConfig(InitialRemediationConfig);\n};\n","export const EXCLUDED_TAG_NAMES = [\n  'script',\n  'noscript',\n  'style',\n  // svg elements:\n  'path',\n  'circle',\n  'rect',\n  'ellipse',\n  'line',\n  'polygon',\n  'polyline',\n  'g',\n];\n\nexport const DATA_UW_IGNORE = 'data-uw-ignore';\nexport const DATA_UW_ELEMENT = 'data-uw-rm-ignore';\n\nexport const EXCLUDED_ATTRIBUTES = [DATA_UW_IGNORE, DATA_UW_ELEMENT];\n","import {\n  EXCLUDED_ATTRIBUTES,\n  EXCLUDED_TAG_NAMES,\n} from '../../constants/excluded-elements';\n\nexport const getAllElements = (): NodeListOf<HTMLElement> => {\n  const tagNamesList = EXCLUDED_TAG_NAMES.join(',');\n  const attrList = EXCLUDED_ATTRIBUTES.map((attr) => `[${attr}]`).join(',');\n  const query = `${tagNamesList},${attrList}`;\n  return document.body.querySelectorAll(`*:not(${query})`);\n};\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","export const REMEDIATION_THROTTLE_DELAY = 300;\nexport const REMEDIATION_DEBOUNCE_DELAY = 500;\nexport const REMEDIATION_DEBOUNCE_MAX_WAIT = 2000;\nexport const REMEDIATION_MODE_SWITCH = 2000;\nexport const DEFAULT_REMEDIATION_TIMEOUT = 500;\n","import { throttle, debounce } from 'lodash-es';\nimport {\n  REMEDIATION_DEBOUNCE_DELAY,\n  REMEDIATION_THROTTLE_DELAY,\n  REMEDIATION_DEBOUNCE_MAX_WAIT,\n  REMEDIATION_MODE_SWITCH,\n} from '../../constants';\n\ninterface DeferredRunner {\n  run: (elements: HTMLElement[]) => void;\n}\n\nlet isActivePhase = true;\n\nexport const useDeferredRunner = (\n  runCallback: (elements: HTMLElement[]) => void,\n): DeferredRunner => {\n  setTimeout(() => {\n    isActivePhase = false;\n  }, REMEDIATION_MODE_SWITCH);\n\n  const throttleRemediationRun = throttle(\n    (elements): void => runCallback(elements),\n    REMEDIATION_THROTTLE_DELAY,\n    {\n      leading: true,\n      trailing: true,\n    },\n  );\n\n  const debounceRemediationRun = debounce(\n    (elements): void => runCallback(elements),\n    REMEDIATION_DEBOUNCE_DELAY,\n    {\n      maxWait: REMEDIATION_DEBOUNCE_MAX_WAIT,\n      leading: true,\n      trailing: true,\n    },\n  );\n\n  const run = (elements: HTMLElement[]): void =>\n    isActivePhase\n      ? throttleRemediationRun(elements)\n      : debounceRemediationRun(elements);\n\n  return { run };\n};\n","export const BASE_API = '__BASE_API__';\nexport const ENDPOINT_CDN = '__ENDPOINT_CDN__';\n\nexport const USERWAY_ADDR: string = '__USERWAY_ADDR__';\n\nexport enum PostMessageAction {\n  Remediation = 'remediation',\n  AriaEditor = 'aria-editor',\n}\n\nexport enum PostMessageType {\n  KeyboardNavEnabled = 'app-key-nav-enabled',\n}\n","import { PostMessageAction } from '../../constants/base-api';\n\nexport const onPostMessage = (\n  messageType: string,\n  callback: () => void,\n): (() => void) => {\n  const listener = (event: MessageEvent): void => {\n    const { data } = event;\n    const { isUserWay, action, type } = data;\n\n    if (\n      !isUserWay ||\n      action !== PostMessageAction.Remediation ||\n      type !== messageType\n    ) {\n      return;\n    }\n\n    callback();\n  };\n\n  window.addEventListener('message', listener);\n\n  const unubscribe = (): void => {\n    window.removeEventListener('message', listener);\n  };\n\n  return unubscribe;\n};\n","import { TuningsConfig } from '../config/config';\nimport { getAllElements } from '../../utils/get-all-elements/get-all-elements';\nimport type { PerformanceService } from '../performance-service/performance-service';\nimport { useDeferredRunner } from '../performance-control/use-deferred-runner';\nimport { RemediationRule } from '../../types/remediation-rule';\nimport { PostMessageType } from '../../constants/base-api';\nimport { onPostMessage } from '../api/on-post-message';\n\ninterface RemediationManager {\n  run: (elements: HTMLElement[]) => void;\n  init: () => void;\n  onDomUpdates: (elements: HTMLElement[]) => void;\n}\n\nconst ENV: string = '__ENV__';\nconst RULES_LIST: string = '__RULES_LIST__';\n\nexport const createRemediationManager = (): RemediationManager => {\n  let remediationInProgress: boolean = false;\n  let performanceService: PerformanceService;\n  let rulesList: RemediationRule[] = [];\n  let remediationElementsQueue: HTMLElement[] = [];\n\n  const runCallback = (elements: HTMLElement[]): void => {\n    const measureId = performanceService?.startMeasurement();\n    // TODO: check do we need run it cause now remediation is sync\n    if (remediationInProgress) {\n      return;\n    }\n\n    remediationInProgress = true;\n    rulesList.forEach((rule: RemediationRule) => {\n      rule.run(elements);\n    });\n    remediationInProgress = false;\n    remediationElementsQueue = [];\n\n    performanceService?.stopMeasurement(measureId);\n  };\n\n  const { run } = useDeferredRunner(runCallback);\n\n  const init = async (): Promise<void> => {\n    if (ENV === 'development') {\n      const performanceServiceModule = await import(\n        '../performance-service/performance-service'\n      );\n\n      performanceService = performanceServiceModule.performanceService;\n    }\n\n    const RulesListModule = await import(\n      RULES_LIST === 'paid'\n        ? '../rules-list/rules-list'\n        : '../rules-list/rules-list-free'\n    );\n\n    rulesList = RulesListModule.RulesList;\n\n    // check if run remediation on tab enabled\n    if (!TuningsConfig.tech_rem_on_tab) {\n      const allElements = getAllElements();\n      run([...allElements]);\n    }\n\n    const unsubscribe = onPostMessage(\n      PostMessageType.KeyboardNavEnabled,\n      () => {\n        const allElements = getAllElements();\n        run([...allElements]);\n        unsubscribe();\n      },\n    );\n  };\n\n  const onDomUpdates = (elements: HTMLElement[]): void => {\n    /** PUSHING MUTATED ELEMENTS TO ARRAY */\n    remediationElementsQueue.push(...elements);\n    /** THROTTLED/DEBOUNCED CALL */\n    run(remediationElementsQueue);\n  };\n\n  return { run, init, onDomUpdates };\n};\n\nexport const remediationManager = createRemediationManager();\n","import { EXCLUDED_ATTRIBUTES, EXCLUDED_TAG_NAMES } from '../../../constants';\r\n\r\ninterface MutationCallback {\r\n  (mutations: MutationRecord[]): HTMLElement[];\r\n}\r\n\r\ninterface MutationFilter {\r\n  (mutation: MutationRecord, type: string): HTMLElement[];\r\n}\r\n\r\n// MUTATED NODES FILTER\r\nconst isNodeExcluded = (node: Node): boolean =>\r\n  !(node instanceof HTMLElement) ||\r\n  EXCLUDED_ATTRIBUTES.some((attr) => node.hasAttribute(attr)) ||\r\n  EXCLUDED_TAG_NAMES.includes(node.nodeName.toLowerCase());\r\n\r\n// MAIN DOM MUTATION FILTER\r\nconst mutationFilter: MutationFilter = (mutation, type) => {\r\n  if (type === 'childList')\r\n    return [].filter.call(\r\n      mutation.addedNodes,\r\n      (node: Node) => !isNodeExcluded(node),\r\n    );\r\n  if (type === 'attributes')\r\n    return isNodeExcluded(mutation.target)\r\n      ? []\r\n      : ([mutation.target] as HTMLElement[]);\r\n\r\n  return [];\r\n};\r\n\r\nexport const prefilter: MutationCallback = (mutations) => {\r\n  const sorted: HTMLElement[] = [];\r\n  for (const mutation of mutations) {\r\n    sorted.push(...mutationFilter(mutation, mutation.type));\r\n  }\r\n  return sorted;\r\n};\r\n","import { remediationManager } from '../remediation-manager/remediation-manager';\nimport { prefilter } from './mutation-filters/prefilter';\nimport { TuningsConfig } from '../config/config';\nimport { onPostMessage } from '../api/on-post-message';\nimport { PostMessageType } from '../../constants/base-api';\n\n// TODO FILL THE LIST WITH ATTRIBUTES ALLOWED TO OBSERVE\nconst allowed: string[] = ['aria-label', 'alt'];\nconst element: HTMLElement = document.body;\nconst options = {\n  attributes: true,\n  attributeFilter: allowed,\n  childList: true,\n  subtree: true,\n};\n\nconst observer: MutationObserver = new MutationObserver((domMutations) => {\n  const filteredNodes = prefilter(domMutations);\n  if (filteredNodes.length) {\n    remediationManager.onDomUpdates(filteredNodes);\n  }\n});\n\nexport const initDomObserver = (target = element, config = options): void => {\n  if (!TuningsConfig.tech_rem_on_tab) {\n    observer.observe(target, config);\n  }\n\n  const unsubscribe = onPostMessage(PostMessageType.KeyboardNavEnabled, () => {\n    observer.observe(target, config);\n    unsubscribe();\n  });\n};\nexport const disableDomObserver = (): void => {\n  observer.disconnect();\n};\n","import { initDomObserver } from './common/dom-observers/main-observer';\nimport { remediationManager } from './common/remediation-manager/remediation-manager';\nimport { initConfig, TuningsConfig } from './common/config/config';\nimport { DEFAULT_REMEDIATION_TIMEOUT } from './constants';\n\nconst initApp = async (): Promise<void> => {\n  await initConfig();\n  const REMEDIATION_TIMEOUT =\n    TuningsConfig.tech_rem_in_throttle_ms ?? DEFAULT_REMEDIATION_TIMEOUT;\n\n  setTimeout(() => {\n    remediationManager.init();\n    initDomObserver();\n  }, REMEDIATION_TIMEOUT);\n};\n\ninitApp();\n","import {\n  RemediationRule,\n  RemediationRuleProps,\n} from '../../../types/remediation-rule';\nimport { PostMessageAction } from '../../../constants/base-api';\n\nexport const createRemediationRule = ({\n  ruleId,\n  isTargetElement,\n  rule,\n  postMessageApi,\n}: RemediationRuleProps): RemediationRule => {\n  const elementCanBeProcessed = (element: HTMLElement): boolean =>\n    !element.hasAttribute(`uw-ignore-${ruleId}`);\n\n  if (postMessageApi) {\n    window.addEventListener('message', (event: MessageEvent) => {\n      const { data } = event;\n      const { isUserWay, action, type } = data;\n\n      if (\n        !isUserWay ||\n        (action !== PostMessageAction.Remediation &&\n          action !== PostMessageAction.AriaEditor)\n      ) {\n        return;\n      }\n\n      if (postMessageApi[type]) {\n        postMessageApi[type](data.data ? data.data : data);\n      }\n    });\n  }\n\n  return {\n    run: (elements: HTMLElement[]) => {\n      if (!isTargetElement) {\n        rule({ context: { elements } });\n        return;\n      }\n\n      const filteredElements = elements.filter(\n        (elem) => elementCanBeProcessed(elem) && isTargetElement(elem),\n      );\n\n      if (!filteredElements.length) {\n        return;\n      }\n\n      rule({ context: { elements: filteredElements } });\n    },\n    stop: (): void => {\n      // stops rm process\n    },\n    rerun: (): void => {},\n    ruleId,\n  };\n};\n","const base64RE = new RegExp('^(data:)');\nconst includesImgExtensionRegex = new RegExp(\n  '(.)(gif|jpe?g|tiff?|png|webp|bmp)',\n  'i',\n);\n\nexport const normalizeSrc = (originalSrc: string) => {\n  if (base64RE.test(originalSrc)) {\n    return originalSrc;\n  }\n\n  if (!!originalSrc) {\n    originalSrc = originalSrc\n      .replace(/^(http|https)(:\\/\\/)/, '')\n      .replace(/^(www\\.)/, '');\n  }\n\n  const matches = originalSrc.match(includesImgExtensionRegex);\n\n  if (matches?.index && matches?.length) {\n    return originalSrc.substring(0, matches.index + matches[0].length);\n  }\n\n  return originalSrc.split('?')[0];\n};\n","export const stripUrlParameters = (url: string): string => {\r\n  try {\r\n    const resultUrl = new URL(url);\r\n    resultUrl.search = ''; // Clear the query string (parameters)\r\n    return resultUrl.toString();\r\n  } catch {\r\n    // if initial url has wrong format, return it\r\n    return url;\r\n  }\r\n};\r\n","export const EXCLUDED_DOMAINS = {\n  automaticcoupons: /automaticcoupons/,\n  'shopping.yahoo': /shopping\\.yahoo/,\n  shopperapproved: /shopperapproved/,\n  rakuten: /rakuten/,\n  'translate.google': /translate\\.google/,\n  'maps.googleapis.com': /maps\\.googleapis\\.com/,\n  's.w.org': /s\\.w\\.org/,\n  avatar: /avatar/,\n  companylogos: /companylogos/,\n  favicon: /favicon/,\n  activecampaign: /lt\\.php(.*)?l=open/,\n  aweber: /openrate\\.aweber\\.com/,\n  bananatag: /bl-1\\.com/,\n  boomerang: /mailstat\\.us\\/tr/,\n  'campaign monitor': /cmail(\\d+)\\.com\\/t\\//,\n  'cirrus insight': /tracking\\.cirrusinsight\\.com/,\n  close: /close\\.com\\/email_opened/,\n  'constant contact': /rs6\\.net\\/on\\.jsp/,\n  contactmonkey: /contactmonkey\\.com\\/api\\/v1\\/tracker/,\n  convertkit: /convertkit-mail\\.com\\/o/,\n  'critical impact': /portal\\.criticalimpact\\.com\\/c2\\//,\n  emarsys: /emarsys\\.com\\/e2t\\/o/,\n  gem: /zen\\.sr\\/o/,\n  getnotify: /email81\\.com\\/case/,\n  getresponse: /getresponse\\.com\\/open\\.html/,\n  growthdot: /growthdot\\.com\\/api\\/mail-tracking/,\n  front: /app\\.frontapp\\.com\\/(.*)?\\/seen/,\n  hubspot: /t\\.(hubspotemail|hubspotfree|signaux|senal|sidekickopen|sigopn)/,\n  icontact: /click\\.icptrack\\.com\\/icp/,\n  intercom: /(via\\.intercom\\.io\\/o)|(intercom-mail\\.com\\/via\\/o)/,\n  litmus: /emltrk\\.com/,\n  mailchimp: /list-manage\\.com\\/track/,\n  mailgun: /email\\.(mailgun|mg)(.*)?\\/o/,\n  mailjet: /mjt\\.lu\\/oo/,\n  mailspring: /getmailspring\\.com\\/open/,\n  mailtrack: /(mailtrack\\.io\\/trace)|(mltrk\\.io\\/pixel)/,\n  mandrill: /mandrillapp\\.com\\/track/,\n  marketo: /resources\\.marketo\\.com\\/trk/,\n  mixmax: /(email|track)\\.mixmax\\.com/,\n  mixpanel: /api\\.mixpanel\\.com\\/track/,\n  nethunt: /nethunt\\.co(.*)?\\/pixel\\.gif/,\n  newton: /tr\\.cloudmagic\\.com/,\n  outreach: /api\\/mailings\\/opened/,\n  phplist: /phplist\\.com\\/lists\\/ut\\.php/,\n  polymail: /polymail\\.io/,\n  postmark: /pstmrk\\.it\\/open/,\n  'return path': /returnpath\\.net\\/pixel\\.gif/,\n  sailthru: /sailthru\\.com\\/trk/,\n  salesforce: /nova\\.collect\\.igodigital\\.com/,\n  sendgrid: /wf\\/open\\?upn/,\n  sendy: /sendy\\/t\\//,\n  streak: /mailfoogae\\.appspot\\.com/,\n  superhuman: /r\\.superhuman\\.com/,\n  thunderhead: /na5\\.thunderhead\\.com/,\n  tinyletter: /tinyletterapp\\.com.*open\\.gif/,\n  yamm: /yamm-track\\.appspot/,\n  yesware: /t\\.yesware\\.com/,\n  'zendesk sell': /futuresimple\\.com\\/api\\/v1\\/sprite\\.png/,\n};\n\nexport const BASE64_REGEXP = new RegExp('^(data:)');\nexport const SVG_REGEXP = new RegExp(/^.+\\.svg$/);\nexport const MIN_IMAGE_SIZE = 50;\nexport const MIN_IMAGE_SIZE_FOR_PROCESSING = 10;\nexport const MICRO_IMAGE_SIZE = 5;\nexport const MAX_ASPECT_RATIO = 10;\nexport const ALT_MAX_LENGTH = 255;\n\nexport const enum DecorativeReason {\n  EXCLUDED_SRC = 'EXCLUDED_SRC',\n  HIDDEN_FROM_SCREEN_READER = 'HIDDEN_FROM_SCREEN_READER',\n  BASE64 = 'BASE64',\n  SVG = 'SVG',\n  SMALL_SIZE = 'SMALL_SIZE',\n  MICRO_SIZE = 'MICRO_SIZE',\n  WRONG_SRC = 'WRONG_SRC',\n  ASPECT_RATIO = 'ASPECT_RATIO',\n}\n\nexport const SHOW_IN_WIDGET_REMEDIATION_LIST = [\n  DecorativeReason.SVG,\n  DecorativeReason.SMALL_SIZE,\n  DecorativeReason.HIDDEN_FROM_SCREEN_READER,\n];\n\nexport const IMAGE_ORIGINAL_ALT_ATTR = 'data-uw-rm-alt-original';\nexport const IMAGE_ALT_HELPER_ID = 'REMEDIATION_IMAGE_MISSING_ALT';\nexport const IMAGE_PROCESSED_ATTR = 'data-uw-rm-alt';\n\nexport const IMG_ALTS_DEBOUNCE_TIME = 1000;\nexport const IMG_ALTS_DEBOUNCE_MAX_TIME = 2000;\n\nexport const IMAGE_EXTENSIONS = [\n  'jpg',\n  'jpeg',\n  'png',\n  'gif',\n  'bmp',\n  'tiff',\n  'tif',\n  'svg',\n  'webp',\n  'ico',\n  'apng',\n  'heif',\n  'heic',\n  'avif',\n  'eps',\n  'raw',\n  'cr2',\n  'nef',\n  'orf',\n  'sr2',\n];\n","import { IMAGE_PROCESSED_ATTR } from './constants';\n\nexport const imageCanBeProcessed = (element: HTMLElement): boolean => {\n  const isImg = element.tagName.toLowerCase() === 'img';\n  const alreadyProcessed = element.hasAttribute(IMAGE_PROCESSED_ATTR);\n\n  if (!isImg || alreadyProcessed) {\n    return false;\n  }\n\n  const hasSrc = element.getAttribute('src');\n  const hasSrcset = element.getAttribute('srcset');\n\n  const hasSomeSrc = hasSrc ?? hasSrcset;\n\n  return !!hasSomeSrc || !!element.closest('picture');\n};\n","import {\n  IMAGE_ORIGINAL_ALT_ATTR,\n  MIN_IMAGE_SIZE_FOR_PROCESSING,\n} from '../constants';\nimport { ImageCorrection, ImageRemediationInfo, ImageGroup } from '../types';\n\nexport const getImageSource = ({ currentSrc, src }: HTMLImageElement): string =>\n  currentSrc || src;\n\nexport const hasMinAllowedSize = (\n  image: HTMLImageElement,\n  minSize: number,\n): boolean => {\n  const RADIX = 10;\n  try {\n    const { width, height } = window.getComputedStyle(image);\n    return (\n      parseInt(width, RADIX) > minSize && parseInt(height, RADIX) > minSize\n    );\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const convertToCorrectionInfo = (\n  image: HTMLImageElement,\n  { decorative, approved, fixedByUserWay, loadingFromMS }: ImageRemediationInfo,\n): ImageCorrection => ({\n  src: getImageSource(image),\n  alt: image.alt,\n  originalAlt: image.getAttribute(IMAGE_ORIGINAL_ALT_ATTR) ?? '',\n  decorative,\n  approved,\n  fixedByUserWay,\n  loadingFromMS,\n});\n\nexport const makeDecorative = (image: HTMLImageElement): void => {\n  image.setAttribute('role', 'presentation');\n  // we don't need aria hidden if role is presentation\n  image.removeAttribute('aria-hidden');\n  // do not use remove attribute, we should have an alt attribute\n  image.setAttribute('alt', '');\n};\n\nexport const getImageSrcGroupName = (src: string): string => {\n  if (!src) {\n    return '';\n  }\n  const { hostname } = new URL(src);\n  return hostname\n    .replace(/^https?:\\/\\//, '')\n    .replace(/^www\\./, '')\n    .replace(/\\.[a-zA-Z0-9]*$/, '');\n};\n\nexport const getPageImagesMajorityGroup = (\n  images: HTMLImageElement[],\n): string => {\n  const groups: ImageGroup[] = [];\n  images.forEach((i) => {\n    const imageSrc = getImageSource(i);\n    const groupName = getImageSrcGroupName(imageSrc);\n\n    if (groupName) {\n      let byName = groups.find((gr) => gr.name === groupName);\n      if (!byName) {\n        byName = {\n          name: groupName,\n          weight: 0,\n        };\n        groups.push(byName);\n      }\n      byName.weight += 1;\n    }\n  });\n  const sortedGroups = groups.sort((grA, grB) =>\n    grA.weight < grB.weight ? 1 : -1,\n  );\n  return sortedGroups[0].name;\n};\n\nexport const isThirdPartyTechImage = (\n  image: HTMLImageElement,\n  majorityGroupName: string,\n): boolean => {\n  const imageSrc = getImageSource(image);\n  const groupName = getImageSrcGroupName(imageSrc);\n\n  return (\n    groupName !== majorityGroupName &&\n    !hasMinAllowedSize(image, MIN_IMAGE_SIZE_FOR_PROCESSING)\n  );\n};\n","import { ALT_MAX_LENGTH, IMAGE_EXTENSIONS } from '../constants';\r\n\r\nexport const isExistingAltInvalid = (alt: string): boolean => {\r\n  const endsWithFilenameRegex = new RegExp(\r\n    `\\\\.(${IMAGE_EXTENSIONS.join('|')})$`,\r\n    'i',\r\n  );\r\n  const endsWithFilename = endsWithFilenameRegex.test(alt);\r\n\r\n  const tooLong = alt.length > ALT_MAX_LENGTH;\r\n\r\n  const empty = !alt.trim();\r\n\r\n  const containManyNumbers = /[0-9]{5,}/.test(alt);\r\n\r\n  const specialSymbolsRegex = new RegExp(\r\n    /^[!@#$%^&*()_+{}[\\]`:;<>,.?~\\\\|\\-=\"'/]+$/,\r\n    'u',\r\n  );\r\n  const containOnlySpecialSymbols = specialSymbolsRegex.test(alt);\r\n\r\n  return (\r\n    containManyNumbers ||\r\n    endsWithFilename ||\r\n    tooLong ||\r\n    empty ||\r\n    containOnlySpecialSymbols\r\n  );\r\n};\r\n","import { normalizeSrc } from '@uw/utils';\nimport { ImageCorrection } from './types';\nimport { IMAGE_PROCESSED_ATTR } from './constants';\nimport {\n  convertToCorrectionInfo,\n  getImageSource,\n  makeDecorative,\n} from './utils/image-utils';\nimport { isExistingAltInvalid } from './utils/is-existing-alt-invalid';\nimport { CorrectionInfo } from '../../api/missing-alt';\nimport { RemediationConfig } from '../../config/config';\n\nexport const applyCorrectionData = (\n  altsCorrections: CorrectionInfo[],\n  imageElement: HTMLImageElement,\n): ImageCorrection | null => {\n  const imageAlt = imageElement.alt.trim();\n  const imageSrc = getImageSource(imageElement);\n\n  const imageCorrection = altsCorrections.find(\n    (correction) => normalizeSrc(correction.src) === normalizeSrc(imageSrc),\n  );\n\n  // check image corrections from BE\n  if (!imageCorrection || imageCorrection.alt === null) {\n    return null;\n  }\n\n  const { decorative, alt, approved, reverted } = imageCorrection;\n\n  if (reverted) {\n    imageElement.setAttribute(IMAGE_PROCESSED_ATTR, 'true');\n\n    return convertToCorrectionInfo(imageElement, {\n      approved: true,\n      decorative: !imageAlt,\n      fixedByUserWay: false,\n    });\n  }\n\n  const isAutoStrategy =\n    !RemediationConfig || RemediationConfig.strategy === 'AUTO';\n  const waitingForApprove = !isAutoStrategy && !approved;\n\n  if (decorative && !waitingForApprove) {\n    makeDecorative(imageElement);\n  }\n\n  const altCanBeApplied =\n    approved || !imageAlt || isExistingAltInvalid(imageAlt);\n\n  if (alt && !waitingForApprove && altCanBeApplied && !decorative) {\n    imageElement.setAttribute('alt', alt);\n  }\n\n  imageElement.setAttribute(IMAGE_PROCESSED_ATTR, 'true');\n\n  const result = convertToCorrectionInfo(imageElement, {\n    approved,\n    decorative,\n    fixedByUserWay: true,\n  });\n\n  // alt was not applied in DOM, but we still need to show it in widget\n  if (waitingForApprove) {\n    result.alt = alt;\n  }\n\n  return result;\n};\n","import { EXCLUDED_DOMAINS } from '../constants';\r\n\r\nexport const isExcludedDomainImage = (url: string): boolean => {\r\n  if (typeof url !== 'string') return false;\r\n\r\n  for (const domain of Object.values(EXCLUDED_DOMAINS)) {\r\n    const regRule = new RegExp(domain, 'i');\r\n    if (url.match(regRule)) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n","import { IMAGE_EXTENSIONS, BASE64_REGEXP } from '../constants';\r\n\r\n// return true, if image src is wrong\r\nexport const hasWrongSrc = (url: string): boolean => {\r\n  if (!url) return true;\r\n  if (url.match(BASE64_REGEXP)) return false;\r\n\r\n  // url starts from http(s) + domain + image extension + optional parameters\r\n  const correctImageUrlPattern = new RegExp(\r\n    `^https?://.{1,256}\\\\.[a-z]{2,6}/.*\\\\.(${IMAGE_EXTENSIONS.join(\r\n      '|',\r\n    )})(\\\\?.*)?$`,\r\n    'i',\r\n  );\r\n\r\n  return !correctImageUrlPattern.test(url);\r\n};\r\n","import { MIN_IMAGE_SIZE_FOR_PROCESSING, MAX_ASPECT_RATIO } from '../constants';\r\n\r\nexport const hasWrongAspectRatio = (image: HTMLImageElement): boolean => {\r\n  const RADIX = 10;\r\n  try {\r\n    const { width, height } = window.getComputedStyle(image);\r\n    const widthInt = parseInt(width, RADIX);\r\n    const heightInt = parseInt(height, RADIX);\r\n\r\n    const incorrectWidthRatio =\r\n      widthInt <= MIN_IMAGE_SIZE_FOR_PROCESSING &&\r\n      heightInt >= widthInt * MAX_ASPECT_RATIO;\r\n\r\n    const incorrectHeightRatio =\r\n      heightInt <= MIN_IMAGE_SIZE_FOR_PROCESSING &&\r\n      widthInt >= heightInt * MAX_ASPECT_RATIO;\r\n\r\n    if (incorrectWidthRatio || incorrectHeightRatio) return true;\r\n\r\n    return false;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n","import {\n  BASE64_REGEXP,\n  DecorativeReason,\n  MICRO_IMAGE_SIZE,\n  MIN_IMAGE_SIZE,\n  SVG_REGEXP,\n} from '../constants';\nimport { hasMinAllowedSize, getImageSource } from './image-utils';\nimport { isExistingAltInvalid } from './is-existing-alt-invalid';\nimport { isExcludedDomainImage } from './is-excluded-domain-image';\nimport { hasWrongSrc } from './has-wrong-src';\nimport { hasWrongAspectRatio } from './has-wrong-aspect-ratio';\n\nexport const shouldBeDecorative = (\n  imageElement: HTMLImageElement,\n): DecorativeReason | null => {\n  const imageSrc = getImageSource(imageElement);\n  const isInvalidAlt = isExistingAltInvalid(imageElement.alt);\n\n  // # image src has wrong URL (high priority check)\n  const isImageSrcWrong = hasWrongSrc(imageSrc);\n  if (isImageSrcWrong) {\n    return DecorativeReason.WRONG_SRC;\n  }\n\n  // # image src includes excluded domain  (high priority check)\n  const isImageDomainExcluded = isExcludedDomainImage(imageSrc);\n  if (isImageDomainExcluded) {\n    return DecorativeReason.EXCLUDED_SRC;\n  }\n\n  // # image is very small (high priority check)\n  const isMicroImage = !hasMinAllowedSize(imageElement, MICRO_IMAGE_SIZE);\n  if (isMicroImage) {\n    return DecorativeReason.MICRO_SIZE;\n  }\n\n  // # image has wrong aspect ratio (high priority check)\n  const isWrongAspectRatio = hasWrongAspectRatio(imageElement);\n  if (isWrongAspectRatio) {\n    return DecorativeReason.ASPECT_RATIO;\n  }\n\n  // # image is base 64\n  // TODO: add support of base64 after BE implementation of sending src hash to alt enpoint\n  const isBase64 = BASE64_REGEXP.test(imageSrc);\n\n  if (isBase64) {\n    return DecorativeReason.BASE64;\n  }\n\n  // # image is hidden for screen readers\n  const hiddenForReaders =\n    imageElement.getAttribute('aria-hidden') === 'true' ||\n    imageElement.getAttribute('role') === 'presentation' ||\n    imageElement.getAttribute('role') === 'none';\n\n  if (hiddenForReaders) {\n    return DecorativeReason.HIDDEN_FROM_SCREEN_READER;\n  }\n\n  // # image is svg and doesn't have own alt attribute\n  const isSvgFile = SVG_REGEXP.test(imageSrc);\n\n  if (isSvgFile && isInvalidAlt) {\n    return DecorativeReason.SVG;\n  }\n\n  // # image is smaller than allowed size and doesn't have own alt attribute or has invalid alt\n  const hasCorrectSize = hasMinAllowedSize(imageElement, MIN_IMAGE_SIZE);\n  if (!hasCorrectSize && isInvalidAlt) {\n    return DecorativeReason.SMALL_SIZE;\n  }\n\n  return null;\n};\n","export const saveRemediationResults = <T>(\n  name: string,\n  corrections: T[],\n  fixedCount: number,\n  toDoCount: number,\n): void => {\n  const legacyRemediationManager = UserWayWidgetApp.getLib(\n    'remediation_manager',\n  );\n  const legacyHelperOutcome = UserWayWidgetApp.getLib(\n    'remediation_helper_outcome',\n  );\n\n  if (!legacyHelperOutcome.of) {\n    return;\n  }\n\n  const result = legacyHelperOutcome.of(\n    name,\n    { items: corrections },\n    null,\n    fixedCount,\n    toDoCount,\n  );\n\n  legacyRemediationManager.HelperCallbackAggregator.onHelperRemediationCompleted(\n    result,\n  );\n};\n","import { CorrectionInfo } from '../../../api/missing-alt';\nimport { ImageCorrection } from '../types';\nimport {\n  convertToCorrectionInfo,\n  getImageSource,\n  makeDecorative,\n} from './image-utils';\nimport { isExistingAltInvalid } from './is-existing-alt-invalid';\nimport {\n  IMAGE_ALT_HELPER_ID,\n  IMAGE_ORIGINAL_ALT_ATTR,\n  IMAGE_PROCESSED_ATTR,\n  SHOW_IN_WIDGET_REMEDIATION_LIST,\n  SVG_REGEXP,\n} from '../constants';\nimport { applyCorrectionData } from '../apply-corrections';\nimport { shouldBeDecorative } from './should-be-decorative';\nimport { RemediationConfig, ServicesConfig } from '../../../config/config';\nimport { saveRemediationResults } from '../../../remediation-result/remediation-result';\n\nexport const sendRemediationResults = (corrections: ImageCorrection[]): void =>\n  saveRemediationResults<ImageCorrection>(\n    IMAGE_ALT_HELPER_ID,\n    corrections,\n    corrections.filter((i) => i.fixedByUserWay).length,\n    corrections.filter((i) => !i.approved).length,\n  );\n\nconst saveOriginalAlt = (imageElement: HTMLImageElement): void => {\n  if (!imageElement.hasAttribute(IMAGE_ORIGINAL_ALT_ATTR)) {\n    imageElement.setAttribute(IMAGE_ORIGINAL_ALT_ATTR, imageElement.alt);\n  }\n};\n\nexport const processImages = (\n  elements: HTMLImageElement[],\n  altCorrections: CorrectionInfo[] = [],\n): void => {\n  if (elements.length === 0) {\n    return;\n  }\n\n  const { paidAi } = ServicesConfig;\n  const imageCorrectionsList: ImageCorrection[] = [];\n\n  for (const elem of elements) {\n    const imageElement = elem as HTMLImageElement;\n    const isInvalidAlt = isExistingAltInvalid(imageElement.alt);\n    const imageSrc = getImageSource(imageElement);\n\n    // Save original alt as attribute\n    saveOriginalAlt(imageElement);\n\n    // Add role=\"img\" for svg images for screen reader correct work\n    // https://bugs.webkit.org/show_bug.cgi?id=216364\n    if (SVG_REGEXP.test(imageSrc) && paidAi) {\n      imageElement.setAttribute('role', 'img');\n    }\n\n    // try to apply corrections from BE\n    const result = applyCorrectionData(altCorrections, imageElement);\n\n    if (result) {\n      imageCorrectionsList.push(result);\n      continue;\n    }\n\n    if (!paidAi) {\n      continue;\n    }\n\n    const decorativeReason = shouldBeDecorative(imageElement);\n\n    // image has own image alt and it is correct\n    if (!isInvalidAlt && !decorativeReason) {\n      imageElement.setAttribute(IMAGE_PROCESSED_ATTR, 'true');\n\n      // we do not show images with excluded src for widget remediation section\n      imageCorrectionsList.push(\n        convertToCorrectionInfo(imageElement, {\n          approved: true,\n          decorative: false,\n          fixedByUserWay: false,\n        }),\n      );\n\n      continue;\n    }\n\n    // check if image should be decorative\n    if (decorativeReason !== null || RemediationConfig.alt?.quotaExceeded) {\n      makeDecorative(imageElement);\n      imageElement.setAttribute(IMAGE_PROCESSED_ATTR, 'true');\n\n      if (\n        decorativeReason &&\n        SHOW_IN_WIDGET_REMEDIATION_LIST.includes(decorativeReason)\n      ) {\n        imageCorrectionsList.push(\n          convertToCorrectionInfo(imageElement, {\n            approved: false,\n            decorative: true,\n            fixedByUserWay: true,\n          }),\n        );\n      }\n\n      continue;\n    }\n\n    // if previous options are not applicable, that means that AI generation is in progress\n    imageElement.setAttribute(IMAGE_PROCESSED_ATTR, 'true');\n    imageCorrectionsList.push(\n      convertToCorrectionInfo(imageElement, {\n        approved: false,\n        decorative: false,\n        fixedByUserWay: true,\n        loadingFromMS: true,\n      }),\n    );\n  }\n\n  // send Post message data for widget\n  sendRemediationResults(imageCorrectionsList);\n};\n","import { ImageCorrection, UpdateImageInfo } from './types';\nimport { IMAGE_ORIGINAL_ALT_ATTR } from './constants';\nimport { convertToCorrectionInfo, makeDecorative } from './utils/image-utils';\nimport { initConfig } from '../../config/config';\nimport { sendRemediationResults } from './utils/process-images';\n\nconst getImagesFromDom = (src: string): NodeListOf<HTMLImageElement> => {\n  // some images can have src without protocol, so need to cover both cases\n  const srcWithoutProtocol = src.replace(/^https?:\\/\\//, '');\n  return document.querySelectorAll(\n    `img[src*=\"${srcWithoutProtocol}\" i],img[srcset*=\"${srcWithoutProtocol}\" i]`,\n  );\n};\n\nexport const revertImage = ({ src }: ImageCorrection): void => {\n  const images = getImagesFromDom(src);\n\n  for (const image of images) {\n    const originalAlt = image.getAttribute(IMAGE_ORIGINAL_ALT_ATTR);\n    if (originalAlt !== null) {\n      image.setAttribute('alt', originalAlt);\n    }\n  }\n};\n\nexport const updateImageInDom = ({\n  src,\n  decorative,\n  alt,\n  role,\n}: UpdateImageInfo): void => {\n  const images = getImagesFromDom(src);\n\n  if (!images.length) {\n    return;\n  }\n\n  for (const image of images) {\n    // # Apply alt attribute\n    image.setAttribute('alt', alt ?? '');\n\n    // # Apply decorative flag\n    if (decorative) {\n      makeDecorative(image);\n    } else {\n      if (\n        image.getAttribute('role') === 'presentation' ||\n        image.getAttribute('role') === 'none'\n      ) {\n        image.removeAttribute('role');\n      }\n\n      if (image.hasAttribute('aria-hidden')) {\n        image.removeAttribute('aria-hidden');\n      }\n    }\n\n    // # for images with role link/button/heading also set aria-label (role data can be received from a11y-editor)\n    if (['link', 'button', 'heading'].includes(role)) {\n      image.setAttribute('aria-label', alt);\n    }\n  }\n\n  sendRemediationResults([\n    convertToCorrectionInfo(images[0], {\n      approved: true,\n      decorative,\n      fixedByUserWay: false,\n    }),\n  ]);\n};\n\nexport const updateImgAltsConfig = (): void => {\n  // TODO: change this update after implementation using of separate endpoint for image config\n  initConfig();\n};\n","import { ENDPOINT_CDN } from '../../constants/base-api';\nimport { ImageAltConfig, ServicesConfig } from '../config/config';\n\nexport interface CorrectionInfo {\n  src: string;\n  alt: string;\n  approved: boolean;\n  decorative: boolean;\n  reverted?: boolean;\n  metadata: {\n    foundCachedResponse: boolean;\n    normalizedImageUrl: string;\n  };\n}\ninterface MissingAltResponse {\n  missingAlts: CorrectionInfo[];\n}\n\nexport const getMissingAlts = async (\n  altListJson: string,\n): Promise<MissingAltResponse> => {\n  const { account } = UserWayWidgetApp.ContextHolder.config;\n  const { siteId } = ServicesConfig;\n  const { resourceHash } = ImageAltConfig;\n\n  const preparedAltsData = encodeURIComponent(altListJson);\n  const response = await fetch(\n    `${ENDPOINT_CDN}api/img-dscr/v2/${account}/${siteId}/${resourceHash}/alts.json?dto=${preparedAltsData}`,\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n  const json = await response.json();\n  return json.payload;\n};\n","export interface MissingAltElement {\n  normalizedSrc: string;\n  src: string;\n  fixed: boolean;\n}\n\nexport interface MissingAltInfo {\n  elements: MissingAltElement[];\n  page: string;\n  siteId: number;\n  userId: number;\n}\n\nexport interface ImageRemediationInfo {\n  approved: boolean;\n  decorative: boolean;\n  fixedByUserWay: boolean;\n  // TODO: rename to AI generation in progress (don't forget angular app)\n  loadingFromMS?: boolean;\n}\n\nexport interface ImageCorrection extends ImageRemediationInfo {\n  alt: string;\n  src: string;\n  originalAlt: string;\n}\n\nexport interface UpdateImageInfo extends ImageCorrection {\n  role: string;\n}\n\nexport enum GetImageAltDirective {\n  RO = 'RO', // Read-only (RO). If image description is found in the database, use it; otherwise, ignore the image.\n}\n\nexport interface ImageInfo {\n  src: string;\n  alt?: string;\n  dir?: GetImageAltDirective;\n}\n\nexport interface GetMissingAltsRequest {\n  sorted: ImageInfo[];\n  tier: AltRemediationTier;\n}\n\nexport interface ImageGroup {\n  name: string;\n  weight: number;\n}\n","import { stripUrlParameters } from '@uw/utils';\nimport {\n  GetImageAltDirective,\n  GetMissingAltsRequest,\n  ImageInfo,\n} from '../types';\nimport { shouldBeDecorative } from './should-be-decorative';\nimport { getImageSource } from './image-utils';\nimport { isExistingAltInvalid } from './is-existing-alt-invalid';\nimport { ImageAltConfig } from '../../../config/config';\n\nexport const missingAltsComparator = <T extends { src: string }>(\n  a: T,\n  b: T,\n): number => a.src.localeCompare(b.src);\n\nexport const prepareMissingAltData = (elements: HTMLElement[]): ImageInfo[] => {\n  const images = elements as HTMLImageElement[];\n\n  const result = images\n    // remove duplicates\n    .filter(\n      (image, index) =>\n        index ===\n        images.findIndex(\n          (elem) => getImageSource(image) === getImageSource(elem),\n        ),\n    )\n    .map((image) => {\n      const imageElement = image as HTMLImageElement;\n      const imageAlt = imageElement.alt.trim();\n      const hasCorrectAlt = imageAlt && !isExistingAltInvalid(imageAlt);\n      const imageSrc = getImageSource(imageElement);\n\n      return {\n        src: stripUrlParameters(imageSrc),\n        alt: imageElement.alt.trim(),\n        dir:\n          hasCorrectAlt || shouldBeDecorative(imageElement)\n            ? GetImageAltDirective.RO\n            : undefined,\n      };\n    });\n\n  // for caching request\n  result.sort(missingAltsComparator);\n  return result;\n};\n\nexport const splitIntoChunks = <T>(array: T[], chunksAmount: number): T[][] => {\n  const chunkSize = Math.ceil(array.length / chunksAmount);\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n  return result;\n};\n\nconst getJsonKbSize = (json: string): number => {\n  // const size = new TextEncoder().encode(json).length;\n  const size = encodeURIComponent(json).length;\n  return size / 1024;\n};\n\nconst MAX_JSON_SIZE_KB = 8;\nconst MAX_SPLIT_LEVEL = 12;\n\nexport const imageInfoToJson = (\n  imageInfoList: ImageInfo[],\n  splitLevel: number = 1,\n): string[] => {\n  if (splitLevel >= MAX_SPLIT_LEVEL) {\n    throw new Error('Max split level exceed');\n  }\n\n  const splitedList = splitIntoChunks(imageInfoList, splitLevel);\n\n  const result: string[] = [];\n\n  for (const chunk of splitedList) {\n    const data: GetMissingAltsRequest = {\n      sorted: chunk,\n      tier: ImageAltConfig.tier,\n    };\n    const jsonData = JSON.stringify(data);\n\n    if (getJsonKbSize(jsonData) > MAX_JSON_SIZE_KB) {\n      return imageInfoToJson(imageInfoList, splitLevel + 1);\n    }\n\n    result.push(jsonData);\n  }\n\n  return result;\n};\n","import { debounce } from 'lodash-es';\nimport { normalizeSrc } from '@uw/utils';\nimport { RuleParams } from '../../../types/remediation-rule';\nimport { ImageAltConfig } from '../../config/config';\nimport {\n  getImageSource,\n  getPageImagesMajorityGroup,\n  isThirdPartyTechImage,\n} from './utils/image-utils';\nimport {\n  IMG_ALTS_DEBOUNCE_MAX_TIME,\n  IMG_ALTS_DEBOUNCE_TIME,\n  SHOW_IN_WIDGET_REMEDIATION_LIST,\n} from './constants';\nimport { getMissingAlts } from '../../api/missing-alt';\nimport {\n  imageInfoToJson,\n  prepareMissingAltData,\n} from './utils/prepare-missing-alt-data';\nimport { processImages } from './utils/process-images';\nimport { shouldBeDecorative } from './utils/should-be-decorative';\n\nconst imagesQueue: HTMLElement[] = [];\n\nconst clearImagesQueue = (): void => {\n  imagesQueue.length = 0;\n};\n\nexport const imageAltRule = (elements: HTMLElement[]): void => {\n  const { state } = ImageAltConfig;\n  if (state === 'ALTS_OFF') {\n    return;\n  }\n\n  const imgMajorityGroup = getPageImagesMajorityGroup(\n    elements as HTMLImageElement[],\n  );\n\n  const imagesForBE: HTMLImageElement[] = [];\n  const imagesNotForBE: HTMLImageElement[] = [];\n\n  for (const image of elements) {\n    const imageEl = image as HTMLImageElement;\n    const isThirdPartyImg = isThirdPartyTechImage(imageEl, imgMajorityGroup);\n    const decorativeReason = shouldBeDecorative(imageEl);\n    const isImageHasDecorativeReasonNotForBE =\n      decorativeReason &&\n      !SHOW_IN_WIDGET_REMEDIATION_LIST.includes(decorativeReason);\n    const isImageNotForBE =\n      isImageHasDecorativeReasonNotForBE || isThirdPartyImg;\n\n    if (isImageNotForBE) {\n      imagesNotForBE.push(imageEl);\n    } else {\n      imagesForBE.push(imageEl);\n    }\n  }\n\n  try {\n    const imagesList = prepareMissingAltData(imagesForBE);\n    const jsonImagesData = imageInfoToJson(imagesList);\n\n    for (const json of jsonImagesData) {\n      getMissingAlts(json).then(({ missingAlts }) => {\n        const imagesToProcess = imagesForBE.filter((image) =>\n          missingAlts.find(\n            (item) =>\n              normalizeSrc(item.src) === normalizeSrc(getImageSource(image)),\n          ),\n        );\n        processImages(imagesToProcess, missingAlts);\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  processImages(imagesNotForBE as HTMLImageElement[]);\n  clearImagesQueue();\n};\n\nconst debouncedAltRule = debounce(\n  (elements): void => imageAltRule(elements),\n  IMG_ALTS_DEBOUNCE_TIME,\n  {\n    maxWait: IMG_ALTS_DEBOUNCE_MAX_TIME,\n    leading: true,\n    trailing: true,\n  },\n);\n\nexport const runImgAltRule = ({ context: { elements } }: RuleParams): void => {\n  imagesQueue.push(...elements);\n  debouncedAltRule(imagesQueue);\n};\n","import { RemediationRule } from '../../types/remediation-rule';\nimport { ImageAltRule } from '../rules/image-alt';\n\nexport const RulesList: RemediationRule[] = [ImageAltRule];\n","import { createRemediationRule } from '../rule-factory/create-remediation-rule';\nimport { IMAGE_ALT_HELPER_ID } from './constants';\nimport { imageCanBeProcessed } from './is-target-element';\nimport {\n  revertImage,\n  updateImageInDom,\n  updateImgAltsConfig,\n} from './post-message-api';\nimport { runImgAltRule } from './rule';\n\nexport const ImageAltRule = createRemediationRule({\n  ruleId: IMAGE_ALT_HELPER_ID,\n  rule: runImgAltRule,\n  isTargetElement: imageCanBeProcessed,\n  postMessageApi: {\n    'image-alt-update': updateImageInDom,\n    'image-alt-revert': revertImage,\n    'image-alt-update-config': updateImgAltsConfig,\n  },\n});\n"],"names":["getRemediationSettings","jsonUrl","__async","InitialRemediationConfig","RemediationConfig","TuningsConfig","ServicesConfig","ImageAltConfig","setRulesConfig","data","__spreadValues","initConfig","config","EXCLUDED_TAG_NAMES","EXCLUDED_ATTRIBUTES","getAllElements","tagNamesList","attrList","attr","query","freeGlobal","freeGlobal$1","freeSelf","root","root$1","Symbol","Symbol$2","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","value","isOwn","tag","unmasked","e","result","objectToString","nullTag","undefinedTag","baseGetTag","isObjectLike","symbolTag","isSymbol","reWhitespace","trimmedEndIndex","string","index","reTrimStart","baseTrim","isObject","type","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","other","isBinary","now","now$1","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","throttle","REMEDIATION_THROTTLE_DELAY","REMEDIATION_DEBOUNCE_DELAY","REMEDIATION_DEBOUNCE_MAX_WAIT","REMEDIATION_MODE_SWITCH","DEFAULT_REMEDIATION_TIMEOUT","isActivePhase","useDeferredRunner","runCallback","throttleRemediationRun","elements","debounceRemediationRun","ENDPOINT_CDN","PostMessageAction","PostMessageType","onPostMessage","messageType","callback","listener","event","isUserWay","action","remediationManager","remediationInProgress","rulesList","remediationElementsQueue","rule","run","rulesListFree","allElements","unsubscribe","isNodeExcluded","node","mutationFilter","mutation","prefilter","mutations","sorted","allowed","element","observer","domMutations","filteredNodes","initDomObserver","target","REMEDIATION_TIMEOUT","_a","createRemediationRule","ruleId","isTargetElement","postMessageApi","elementCanBeProcessed","filteredElements","elem","base64RE","includesImgExtensionRegex","normalizeSrc","originalSrc","matches","stripUrlParameters","url","resultUrl","EXCLUDED_DOMAINS","BASE64_REGEXP","SVG_REGEXP","MIN_IMAGE_SIZE","MIN_IMAGE_SIZE_FOR_PROCESSING","MICRO_IMAGE_SIZE","MAX_ASPECT_RATIO","ALT_MAX_LENGTH","DecorativeReason","SHOW_IN_WIDGET_REMEDIATION_LIST","IMAGE_ORIGINAL_ALT_ATTR","IMAGE_ALT_HELPER_ID","IMAGE_PROCESSED_ATTR","IMG_ALTS_DEBOUNCE_TIME","IMG_ALTS_DEBOUNCE_MAX_TIME","IMAGE_EXTENSIONS","imageCanBeProcessed","isImg","alreadyProcessed","hasSrc","hasSrcset","getImageSource","currentSrc","src","hasMinAllowedSize","image","minSize","width","height","convertToCorrectionInfo","decorative","approved","fixedByUserWay","loadingFromMS","makeDecorative","getImageSrcGroupName","hostname","getPageImagesMajorityGroup","images","groups","i","imageSrc","groupName","byName","gr","grA","grB","isThirdPartyTechImage","majorityGroupName","isExistingAltInvalid","alt","endsWithFilename","tooLong","empty","containManyNumbers","containOnlySpecialSymbols","applyCorrectionData","altsCorrections","imageElement","imageAlt","imageCorrection","correction","reverted","waitingForApprove","altCanBeApplied","isExcludedDomainImage","domain","regRule","hasWrongSrc","hasWrongAspectRatio","widthInt","heightInt","incorrectWidthRatio","incorrectHeightRatio","shouldBeDecorative","isInvalidAlt","saveRemediationResults","name","corrections","fixedCount","toDoCount","legacyRemediationManager","legacyHelperOutcome","sendRemediationResults","saveOriginalAlt","processImages","altCorrections","paidAi","imageCorrectionsList","decorativeReason","getImagesFromDom","srcWithoutProtocol","revertImage","originalAlt","updateImageInDom","role","updateImgAltsConfig","getMissingAlts","altListJson","account","siteId","resourceHash","preparedAltsData","GetImageAltDirective","missingAltsComparator","a","b","prepareMissingAltData","hasCorrectAlt","splitIntoChunks","array","chunksAmount","chunkSize","getJsonKbSize","json","MAX_JSON_SIZE_KB","MAX_SPLIT_LEVEL","imageInfoToJson","imageInfoList","splitLevel","splitedList","chunk","jsonData","imagesQueue","clearImagesQueue","imageAltRule","state","imgMajorityGroup","imagesForBE","imagesNotForBE","imageEl","isThirdPartyImg","imagesList","jsonImagesData","missingAlts","imagesToProcess","item","error","debouncedAltRule","RulesList"],"mappings":"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","x_google_ignoreList":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}